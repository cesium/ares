# LANGUAGE SYSTEMS
languagesystem DFLT dflt;
languagesystem latn dflt;

# FEATURES CLASSES
@uc = [A B C D E F G H I J K L M N O P Q R S T U V W X Y Z Agrave Aacute Acircumflex Atilde Adieresis Amacron Abreve Aring Aringacute Aogonek AE AEacute Cacute Ccircumflex Ccaron Cdotaccent Ccedilla Dcaron Dcroat Egrave Eacute Ecircumflex Ecaron Edieresis Emacron Ebreve Edotaccent Eogonek Gcircumflex Gbreve Gdotaccent Gcommaaccent Hcircumflex Hbar Igrave Iacute Icircumflex Itilde Idieresis Imacron Ibreve Idotaccent Iogonek IJ Jcircumflex Kcommaaccent Lacute Lcaron Lcommaaccent Lslash Ldot Nacute Ncaron Ntilde Ncommaaccent Ograve Oacute Ocircumflex Otilde Odieresis Omacron Obreve Ohungarumlaut Oslash Oslashacute OE Racute Rcaron Rcommaaccent Sacute Scircumflex Scaron Scedilla uni0218 Tcaron uni0162 Tbar Ugrave Uacute Ucircumflex Utilde Udieresis Umacron Ubreve Uring Uhungarumlaut Uogonek Wgrave Wacute Wcircumflex Wdieresis Ygrave Yacute Ycircumflex Ydieresis Zacute Zcaron Zdotaccent Schwa Eng Eth Thorn];
@uc.all = [@uc fi.cap fl.cap germandbls.cap];
@uc.punct = [hyphen.cap exclamdown.cap questiondown.cap guilsinglleft.cap guilsinglright.cap guillemotleft.cap guillemotright.cap endash.cap emdash.cap periodcentered.cap parenleft.cap parenright.cap bracketleft.cap bracketright.cap braceleft.cap braceright.cap];

@lc = [a b c d e f g h i j k l m n o p q r s t u v w x y z agrave aacute acircumflex atilde adieresis amacron abreve aring aringacute aogonek ae aeacute cacute ccircumflex ccaron cdotaccent ccedilla dcaron dcroat egrave eacute ecircumflex ecaron edieresis emacron ebreve edotaccent eogonek gcircumflex gbreve gdotaccent gcommaaccent hcircumflex hbar igrave iacute icircumflex itilde idieresis imacron ibreve idotaccent iogonek ij jcircumflex kcommaaccent lacute lcaron lcommaaccent lslash ldot nacute ncaron ntilde ncommaaccent ograve oacute ocircumflex otilde odieresis omacron obreve ohungarumlaut oslash oslashacute oe racute rcaron rcommaaccent sacute scircumflex scaron scedilla uni0219 tcaron uni0163 tbar ugrave uacute ucircumflex utilde udieresis umacron ubreve uring uhungarumlaut uogonek wgrave wacute wcircumflex wdieresis ygrave yacute ycircumflex ydieresis zacute zcaron zdotaccent schwa eng eth thorn];
@lc.all = [@lc dotlessi idotaccent];
@lc.punct_uc = [hyphen exclamdown questiondown guilsinglleft guilsinglright guillemotleft guillemotright endash emdash periodcentered parenleft parenright bracketleft bracketright braceleft braceright];
@figs.default = [zero one two three four five six seven eight nine];
@currency.default = [numbersign Euro dollar cent sterling florin yen zero.slash];
@figs.LT = [zero one two three four five six seven eight nine];
@currency.LT = [numbersign Euro dollar cent sterling florin yen zero.slash];
@figs.LP = [zero.LP one.LP two.LP three.LP four.LP five.LP six.LP seven.LP eight.LP nine.LP];
@currency.LP = [numbersign.LP Euro.LP dollar.LP cent.LP sterling.LP florin.LP yen.LP zero.slashLP];
@figs.superior = [zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior];
@arrows.from = [a b c d e f g h];
@arrows.to = [arrowleft arrowright arrowup arrowdown arrowupleft arrowupright arrowdownleft arrowdownright];

# FEATURES
feature aalt { # ALL ALTERNATES
	feature zero;
	feature tnum;
	feature pnum;
	feature case;
} aalt;

 feature sups { # SUPERIOR
	lookup sups_figs {
		sub @figs.default by @figs.superior;
	} sups_figs;
 } sups;

feature zero { # ZERO SLASH
	lookup zero_all {
		sub zero by zero.slash;
	} zero_all;
} zero;

feature tnum { # TABULAR FIGURES
	lookup tnum_all {
		sub [@figs.LP] by [@figs.LT];
		sub [@currency.LP] by [@currency.LT];
	} tnum_all;
} tnum;

feature pnum { # PROPORTIONAL FIGURES
	lookup pnum_all {
		sub [@figs.LT] by [@figs.LP];
		sub [@currency.LT] by [@currency.LP];
	} pnum_all;
} pnum;

feature ordn { # ORDINALS
	lookup ordn_base {
		sub @figs.default [O o]' by ordmasculine;
		sub @figs.default [A a]' by ordfeminine;
	} ordn_base;
	lookup ordn_numero {
		sub N [O o degree ordmasculine] by numero;
		sub n [O o degree ordmasculine] by numero;
	} ordn_numero;
} ordn;

feature case { # CASE FORMS
	lookup case_exceptions {
 		sub [germandbls fi fl] by [germandbls.cap fi.cap fl.cap];
 		sub dotlessi by I;
 	} case_exceptions;
	lookup case_punctuation {
		sub @lc.punct_uc by @uc.punct;
	} case_punctuation;
} case;

feature liga { # LIGATURES
	lookup liga_all {
		sub f f by f_f;
		sub f l by fl;
		sub f i by fi;
		sub f f l by f_f_l;
		sub f f i by f_f_i;
	} liga_all ;
} liga;

feature calt{
    sub @figs.default colon' @figs.default by colon.salt;
    sub @figs.LP colon' @figs.LP by colon.salt;
    }calt;

feature ss04{
	featureNames{
	name 1 "Circled Figures";
	name 3 "Circled Figures";
    };
    sub zero by circleddigitzero;
    sub one by circleddigitone;
    sub two by circleddigittwo;
    sub three by circleddigitthree;
    sub four by circleddigitfour;
    sub five by circleddigitfive;
    sub six by circleddigitsix;
    sub seven by circleddigitseven;
    sub eight by circleddigiteight;
    sub nine by circleddigitnine;
}ss04;

feature ss05{
	featureNames{
	name 1 "Square Enclosed Figures";
	name 3 "Square Enclosed Figures";
    };
    sub zero by squareddigitzero;
    sub one by squareddigitone;
    sub two by squareddigittwo;
    sub three by squareddigitthree;
    sub four by squareddigitfour;
    sub five by squareddigitfive;
    sub six by squareddigitsix;
    sub seven by squareddigitseven;
    sub eight by squareddigiteight;
    sub nine by squareddigitnine;
}ss05;

feature ss06{
	featureNames{
	name 1 "Arrows";
	name 3 "Arrows";
    };
    sub hyphen greater by arrowright;
    sub less hyphen by arrowleft;
    sub equal greater by arrowright;
    sub less equal by arrowleft;
	}ss06;